name: build

on:
  push:
    branches:
      - main

  pull_request:
  workflow_dispatch:

env:
  RUST_VERSION: 1.60.0
  RUSTFLAGS: "-D warnings"
  RUSTDOCFLAGS: "-D warnings"

jobs:
  test-no-feature:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: ${{ env.RUST_VERSION }}
          profile: minimal
          override: true
      - run: cargo test --workspace --no-default-features
      - run: cargo test --workspace
  test-all-features:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: ${{ env.RUST_VERSION }}
          profile: minimal
          override: true
      - run: cargo test --workspace --all-features
      - run: cargo test --workspace --all-features -- --ignored
  test-2d:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: ${{ env.RUST_VERSION }}
          profile: minimal
          override: true
      - run: cargo test -p heron_rapier --no-default-features --features 2d
      - run: cargo test -p heron_debug --no-default-features --features 2d
      - run: cargo test --no-default-features --features 2d
  test-3d:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: ${{ env.RUST_VERSION }}
          profile: minimal
          override: true
      - run: cargo test -p heron_core --no-default-features --features 3d
      - run: cargo test -p heron_rapier --no-default-features --features 3d
      - run: cargo test --no-default-features --features 3d
  test-debug-2d:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: ${{ env.RUST_VERSION }}
          profile: minimal
          override: true
      - run: cargo test --no-default-features --features debug-2d
  test-enhanced-determinism:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: ${{ env.RUST_VERSION }}
          profile: minimal
          override: true
      - run: cargo test -p heron_rapier --no-default-features --features enhanced-determinism
      - run: cargo test --no-default-features --features enhanced-determinism
  test-collision-from-mesh:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: ${{ env.RUST_VERSION }}
          profile: minimal
          override: true
      - run: cargo test -p heron_core --no-default-features --features collision-from-mesh
      - run: cargo test --no-default-features --features collision-from-mesh  
  code-style:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: ${{ env.RUST_VERSION }}
          override: true
          components: clippy, rustfmt
      - run: cargo fmt --all -- --check
      - run: cargo clippy --all-features --workspace
  documentation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: stable
          override: true
          components: clippy, rustfmt
      - run: cargo doc --all-features --no-deps --workspace
  unwanted-dependencies:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: stable
          override: true
          profile: minimal
      - run: cargo install cargo-deny --locked
      - run: cargo deny check
  unused-dependencies:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: nightly
          override: true
          profile: minimal
      - run: cargo install cargo-udeps --locked
      - run: cargo udeps --workspace --all-features
  release-pr:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    outputs:
      pr: ${{ steps.release_please.outputs.pr }}
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release_please
        with:
          release-type: rust
          command: release-pr
          changelog-types: '[{"type":"feat","section":"Features","hidden":false},{"type":"fix","section":"Bug Fixes","hidden":false},{"type":"perf","section":"Performance","hidden":false},{"type":"docs","section":"Documentation","hidden":false}]'
          extra-files: |
            src/lib.rs
            guide/src/quickstart.md
  release:
    needs: 
      - test-no-feature
      - test-all-features
      - test-2d
      - test-3d
      - test-debug-2d
      - test-enhanced-determinism
      - test-collision-from-mesh
      - documentation
      - release-pr
    runs-on: ubuntu-latest
    if: ${{ !needs.release-pr.outputs.pr }}
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
    steps:
      - uses: google-github-actions/release-please-action@v3.1
        id: release
        with:
          release-type: rust
          command: github-release
  publish:
    needs: release
    runs-on: ubuntu-latest
    if: ${{ needs.release.outputs.release_created }}
    env:
      CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: stable
          override: true
          profile: minimal

      - name: Publish heron_core
        run: cargo publish
        working-directory: core

      - name: Publish heron_macros
        run: cargo publish
        working-directory: macros

      - name: Publish heron_rapier
        run: sleep 30 && cargo publish
        working-directory: rapier

      - name: Publish heron_debug
        run: sleep 30 && cargo publish
        working-directory: debug

      - name: Publish heron
        run: sleep 30 && cargo publish
