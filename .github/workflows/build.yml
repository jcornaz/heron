name: Build

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - '*'

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      RUSTFLAGS: "-D warnings"

    strategy:
      matrix:
        rust:
          - '1.56.0'
        crate:
          - '.'
          - 'core'
          - 'rapier'
          - 'debug'
          - 'macros'

    defaults:
      run:
        working-directory: ${{ matrix.crate }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2.3.5

      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.rustup
            ~/.cargo
            ./target
          key: build-${{ matrix.crate }}-${{ matrix.rust }}-${{ hashFiles('**/Cargo.toml') }}-${{ hashFiles('**/*.rs') }}
          restore-keys: |
            build-${{ matrix.crate }}-${{ matrix.rust }}-${{ hashFiles('**/Cargo.toml') }}-
            build-${{ matrix.crate }}-${{ matrix.rust }}-

      - name: Install dependencies
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libudev-dev libasound2-dev

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true

      - name: Run ignored tests
        run: cargo test --all-features -- --ignored

      - name: Test with all features
        run: cargo test --all-features

      - name: Test without any feature
        run: cargo test --no-default-features

      - name: Test with 2d feature
        if: matrix.crate == 'rapier' || matrix.crate == 'debug' || matrix.crate == '.'
        run: cargo test --no-default-features --features 2d

      - name: Test with 3d feature
        if: matrix.crate == 'rapier' || matrix.crate == 'debug' || matrix.crate == '.'
        run: cargo test --no-default-features --features 3d

      - name: Test with debug-2d feature
        if: matrix.crate == '.'
        run: cargo test --no-default-features --features debug-2d

      - name: Test with debug-3d feature
        if: matrix.crate == '.'
        run: cargo test --no-default-features --features debug-3d

      - name: Test with default features
        run: cargo test

  code-style:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      RUSTFLAGS: "-D warnings"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2.3.5

      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.rustup
            ~/.cargo
            ./target
          key: code-style-${{ hashFiles('**/Cargo.toml') }}-${{ hashFiles('**/*.rs') }}
          restore-keys: code-style-${{ hashFiles('**/Cargo.toml') }}-

      - name: Install dependencies
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libudev-dev libasound2-dev

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: '1.56.0'
          override: true
          components: rustfmt, clippy

      - name: Format
        run: cargo fmt -- --check

      - name: Clippy
        run: cargo clippy --workspace --all-features

  documentation:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      RUSTFLAGS: "-D warnings"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2.3.5

      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.rustup
            ~/.cargo
            ./target
          key: docs-${{ hashFiles('**/Cargo.toml') }}-${{ hashFiles('**/*.rs') }}
          restore-keys: docs-${{ hashFiles('**/Cargo.toml') }}-

      - name: Install dependencies
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libudev-dev libasound2-dev

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: '1.56.0'
          override: true

      - name: Build documentation
        run: cargo doc --workspace
